/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerapolicy;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Marcelo
 */
public class Policy extends javax.swing.JFrame {

    /**
     * Creates new form Policy
     */
    public Policy() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox12 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Endereço/IP - Servidor");

        jLabel2.setText("Endereço/IP - Cliente");

        jCheckBox1.setText("Connect");

        jCheckBox2.setText("Accept");

        jCheckBox3.setText("Listen");

        jCheckBox4.setText("Resolve");

        jCheckBox5.setText("Write");

        jCheckBox6.setText("Read");

        jCheckBox7.setText("Connect");

        jCheckBox8.setText("Accept");

        jCheckBox9.setText("Listen");

        jCheckBox10.setText("Resolve");

        jCheckBox11.setText("Read");

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox12.setText("Grant AllPermission");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jCheckBox7)
                                    .addComponent(jCheckBox8)
                                    .addComponent(jCheckBox9)
                                    .addComponent(jCheckBox10)
                                    .addComponent(jCheckBox11))
                                .addGap(67, 67, 67))
                            .addComponent(jTextField2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jCheckBox12))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextField1.getText().equals("") || jTextField2.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Preencha os campos corretamente!", "Policy", JOptionPane.CLOSED_OPTION, JOptionPane.CLOSED_OPTION);
        } else {

            try {
                FileWriter arq = new FileWriter("C:\\Users\\Márcio\\Documents\\GitHub\\Poza-e-Watinha\\RMI.Servidor\\security.policy");
                PrintWriter gravarArq = new PrintWriter(arq);
                gravarArq.printf("grant {");

                
                
                gravarArq.printf("\r\n\r\n//Permissão da conexão - Servidor");
                if (jCheckBox1.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField1.getText() + "\", \"connect\";");
                }
                if (jCheckBox2.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField1.getText() + "\", \"accept\";");
                }
                if (jCheckBox3.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField1.getText() + "\", \"listen\";");
                }
                if (jCheckBox4.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField1.getText() + "\", \"resolve\";");
                }

                gravarArq.printf("\r\n\r\n//Permissão para o servidor poder ler e escrever");
                if (jCheckBox5.isSelected()) {
                    gravarArq.printf("\r\n permission java.util.PropertyPermission \"*\", \"write\";");
                }
                if (jCheckBox6.isSelected()) {
                    gravarArq.printf("\r\n permission java.util.PropertyPermission \"*\", \"read\";");
                }

                gravarArq.printf("\r\n\r\n//Permissão da conexão - Cliente");
                if (jCheckBox7.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField2.getText() + "-\", \"connect\";");
                }
                if (jCheckBox8.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField2.getText() + "-\", \"accept\";");
                }
                if (jCheckBox9.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField2.getText() + "-\", \"listen\";");
                }
                if (jCheckBox10.isSelected()) {
                    gravarArq.printf("\r\n permission java.net.SocketPermission \"" + jTextField2.getText() + "-\", \"resolve\";");
                }

                
                if (jCheckBox11.isSelected()) {
                    gravarArq.printf("\r\n\r\n//Permissão para o cliente poder ler");
                    gravarArq.printf("\r\n permission java.io.FilePermission \"\\-\", \"read\";");
                }

                
                if (jCheckBox12.isSelected()) {
                    gravarArq.printf("\r\n\r\n//Permissão para todos os usuários");
                    gravarArq.printf("\r\n permission java.security.AllPermission;");
                }

                /*------- estas linhas de código não foram necessárias neste projeto ---------------
                
                gravarArq.printf("\r\n permission java.net.SocketPermission \"127.0.0.1:5432\", \"connect, resolve\";");
                gravarArq.printf("\r\n\r\n//Permissão para a biblioteca do hibernate");
                gravarArq.printf("\r\n permission java.lang.RuntimePermission \"createClassLoader\"; ");
                gravarArq.printf("\r\n permission java.lang.RuntimePermission \"setContextClassLoader\"; ");
                gravarArq.printf("\r\n permission java.util.PropertyPermission \"jboss.i18n.generate-proxies\", \"write\"; ");
                gravarArq.printf("\r\n permission java.util.PropertyPermission \"hibernate.enable_specj_proprietary_syntax\", \"read\"; ");
                gravarArq.printf("\r\n permission java.util.PropertyPermission \"org.postgresql.forceBinary\", \"read\"; ");
                gravarArq.printf("\r\n permission java.lang.reflect.ReflectPermission \"suppressAccessChecks\"; ");
               
                */
                
                
                gravarArq.printf("\r\n\r\n};");
                arq.close();
            } catch (IOException ex) {
                Logger.getLogger(Policy.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Policy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Policy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Policy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Policy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Policy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
